openapi: 3.0.1
info:
  title: "US-Street-API"
  description: |
    Utilize the SmartyStreets RESTful API to search for a freeform street address, Street/ZIPCode or Street/City/State combo and access more relevant information than you could possibly need. 
  termsOfService: "https://smartystreets.com/legal/terms-of-service"
  contact:
    name: "the Smarty Pit-Crew"
    email: "support@smartystreets.com"
  version: 3.2.22
  
servers:
- url: https://us-street.api.smartystreets.com/
  
paths:
  /street-address:
    get:
      tags:
      - street-address
      summary: For sending a single address
      description: |
        Provide either a 'city'/'state' combo or just a 'zipcode' and an optional 'input_id'
      parameters:
        - $ref: '#/components/parameters/auth-id'
        - $ref: '#/components/parameters/auth-token'
        - $ref: '#/components/parameters/street'
        - $ref: '#/components/parameters/street2'
        - $ref: '#/components/parameters/secondary'
        - $ref: '#/components/parameters/city'
        - $ref: '#/components/parameters/state'
        - $ref: '#/components/parameters/zipcode'
        - $ref: '#/components/parameters/lastline'
        - $ref: '#/components/parameters/addressee'
        - $ref: '#/components/parameters/urbanization'
        - $ref: '#/components/parameters/candidates'
        - $ref: '#/components/parameters/match'
        - $ref: '#/components/parameters/input_id'
      responses:
        200:
          description: OK(success!), The response body will be a JSON array containing zero or more matches for the input provided with the request. The structure of the response is the same for both GET and POST requests.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/200'
        401:
          description: Unauthorized
          content:
            text/plain:
              schema:
                example: The credentials were provided incorrectly or did not match any existing, active credentials.
                type: string
        402:
          description: Payment Required
          content:
            text/plain:
              schema:
                example: There is no active subscription for the account associated with the credentials submitted with the request.
                type: string
        413:
          description: Request Entity Too Large
          content:
            text/plain:
              schema:
                example: The maximum size for a request body to this API is 16K (16,384 bytes).
                type: string
        400:
          description: Bad Request (Malformed Payload)
          content:
            text/plain:
              schema:
                example: The request body of a POST requeset contained no lookups or contained malformed JSON.
                type: string
        429:
          description: Too Many Requests
          content:
            text/plain:
              schema:
                example: When using public "website key" authentication, we restrict the number of requests coming from a given source over too short of a time. If you use "website key" authentication, you can avoid this error by adding your IP address as an authorized host for the website key in question.
                type: string
    post:
      tags:
      - street-address
      summary: Search for a batch of ZIPCodes
      description: Search for a larger volume of data (up to 100 inputs or 16K per request)
      requestBody:
        description: 'Data should be encoded as a `JSON` array where each element in the array is a `JSON object with field names identical to those in the provided examples.'
        content:
          application/json; charset=utf-8:
            schema:
              $ref: '#/components/schemas/LookupManyArray'
        required: true
      responses:
        200:
          description: successful operation
          content:
            application/json; charset=utf-8:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/200'
        403:
          description: Invalid API key, or other reason why access is forbidden.
        
tags:
- name: street-address
  description: Search Street Addresses
  
externalDocs:
  description: "Extensive documentation for the US-ZIPCode-API"
  url: https://smartystreets.com/docs/cloud/us-zipcode-api
  
components:
  parameters:
    auth-id:
      name: auth-id
      in: query
      description: "**Auth ID** *Example: 123* Authentication information"
      schema:
        type: string
    auth-token:
      name: auth-token
      in: query
      description: "**Auth Token** *Example: abc* Authentication information"
      schema:
        type: string
    street:
      name: street
      in: query
      description: "**Street** *Example: 1600+amphitheatre+pkwy* The street line of the address, or the entire address('freeform' input)."
      schema:
        type: string
    street2:
      name: street2
      in: query
      description: "**Street2** *Example: Leave it on the front porch* Any extra address information."
      schema:
        type: string
    secondary:
      name: secondary
      in: query
      description: "**Secondary** *Example: Apt 52* Apartment, suite, or office number."
      schema:
        type: string
    city:
      name: city
      in: query
      description: "**City** *Example: Provo* The city name."
      schema:
        type: string
    state:
      name: state
      in: query
      description: "**State** *Example: UT* State name or two-letter abbreviation."
      schema:
        type: string
    zipcode:
      name: zipcode
      in: query
      description: "**Zip code** *Example: 84604* The ZIP Code."
      schema:
        type: string
    lastline:
      name: lastline
      in: query
      description: "**Last Line** *Example: Provo, UT 84604* City, state, and ZIP Code combined."
      schema:
        type: string
    addressee:
      name: addressee
      in: query
      description: "**Addressee** *Example: John Doe* The name of the recipient, firm, or company at this address."
      schema:
        type: string
    urbanization:
      name: urbanization
      in: query
      description: "**Urbanization** Only used with Puerto Rico."
      schema:
        type: string
    candidates:
      name: candidates
      in: query
      description: "**Candidates** *Example: 1* The maximum number of valid addresses returned when the input is ambiguous (Max Value: 10)."
      schema:
        type: string
    match:
      name: match
      in: query
      description: "**Match Type** *Example: invalid* The match output strategy to be employted for this lookup. Valid values are: **strict**: The API will ONLY return candidates that are valid USPS addresses. **range**: The API will return candidates that are valid USPS addresses, as well as invalid addresses with primary numbers that fall within a valid range for the street. **invalid**: The API will return a single candidate for every properly submitted address, even if invalid or ambiguous."
      schema:
        type: string
    input_id:
      name: input_id
      in: query
      example: 867-5309
      description: "**Input ID** *Example: 867-5309* A unique identifier for this address used in your application; this field will be copied to the output"
      schema:
        type: string
        
  schemas:
    200:
      title: Successful response
      type: object
      properties:
        input_id:
          type: string
          example: '8675309'
        input_index:
          type: integer
        candidate_index:
          type: integer
        addressee:
          type: string
          example: 'Toby Flenderson'
        delivery_line_1:
          type: string
          example: '1725 Slough Avenue ste 200'
        delivery_line_2:
          type: string
          example: 'Box 1'
        last_line:
          type: string
          example: 'Scranton PA 18503-9901'
        delivery_point_barcode:
          type: string
          example: '185039901010'
        components:
          type: array
          items:
            $ref: '#/components/schemas/Components'
        metadata:
          type: array
          items:
            $ref: '#/components/schemas/Metadata'
        analysis:
          type: array
          items:
            $ref: '#/components/schemas/Analysis'
    Components:
      title: Components
      type: object
      properties:
        urbanization:
          type: string
        primary_number:
          type: string
          example: '1725'
        street_name:
          type: string
          example: 'Slough'
        street_predirection:
          type: string
        street_postdirection:
          type: string
        street_suffix:
          type: string
          example: 'Ave'
        secondary_number:
          type: string
          example: '200'
        secondary_desigantor:
          type: string
          example: 'ste'
        extra_secondary_number:
          type: string
        extra_secondary_designator:
          type: string
        pmb_designator:
          type: string
          example: 'Box'
        pmb_number:
          type: string
          example: '1'
        city_name:
          type: string
          example: 'Scranton'
        default_city_name:
          type: string
        state_abbreviation:
          type: string
          example: 'PA'
        zipcode:
          type: string
          example: '18503'
        plus4_code:
          type: string
          example: '9901'
        delivery_point:
          type: string
          example: '01'
        delivery_point_check_digit:
          type: string
          example: '0'
    Metadata:
      title: Metadata
      type: object
      properties:
        record_type:
          type: string
        zip_type:
          type: string
          example: 'Standard'
        county_fips:
          type: string
          example: '4206935'
        county_name:
          type: string
          example: 'Lackawanna'
        ews_match:
          type: string
        carrier_route:
          type: string
          example: 'C004'
        congressional_district:
          type: string
          example: '11'
        building_default_indicator:
          type: string
          example: 'Y'
        rdi:
          type: string
          example: 'Commercial'
        elot_sequence:
          type: string
          example: '0001'
        elot_sort:
          type: string
          example: 'A'
        latitude:
          type: number
          example: 41.409483
        longitude:
          type: number
          example: -75.647856
        precision:
          type: string
          example: 'Zip8'
        time_zone:
          type: string
          example: 'Eastern Daylight Time'
        utc_offset:
          type: integer
          example: -4
        dst:
          type: boolean
          example: true
    Analysis:
      title: Analysis
      type: object
      properties:
        dpv_match_code:
          type: string
          example: 'Y'
        dpv_footnotes:
          type: string
          example: 'AABB'
        dpv_cmra:
          type: string
          example: 'N'
        dpv_vacant:
          type: string
          example: 'N'
        active:
          type: string
          example: 'Y'
        footnotes:
          type: string
          example: 'L#'
        lacslink_code:
          type: string
        lacslink_indicator:
          type: string
        suitelink_match:
          type: boolean
    LookupManyArray:
      type: string
      example:
        - {"street": "1 Santa Claus", "city": "North Pole", "state": "AK", "candidates": 10}
        - {"addressee": "Apple Inc", "street": "1 infinite loop", "city": "cupertineo", "state": "california", "zipcode": "95014", "candidates": 10}