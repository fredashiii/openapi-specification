openapi: 3.0.1
info:
  title: "International-Street-API"
  description: |
    Utilize the SmartyStreets RESTful API to search for a country/freeform address , country/address/postal code or country/address/locality/administrative area combo and access more relevant information than you could possibly need. 
  termsOfService: "https://smartystreets.com/legal/terms-of-service"
  contact:
    name: "the Smarty Pit-Crew"
    email: "support@smartystreets.com"
  version: 2.4.7
  
servers:
- url: https://international-street.api.smartystreets.com/
  
paths:
  /verify:
    get:
      tags:
      - verify
      summary: For sending a single address
      description: |
        Provide either a 'city'/'state' combo or just a 'zipcode' and an optional 'input_id'
      parameters:
        - $ref: '#/components/parameters/auth-id'
        - $ref: '#/components/parameters/auth-token'
        - $ref: '#/components/parameters/country'
        - $ref: '#/components/parameters/geocode'
        - $ref: '#/components/parameters/language'
        - $ref: '#/components/parameters/freeform'
        - $ref: '#/components/parameters/address1'
        - $ref: '#/components/parameters/address2'
        - $ref: '#/components/parameters/address3'
        - $ref: '#/components/parameters/address4'
        - $ref: '#/components/parameters/organization'
        - $ref: '#/components/parameters/locality'
        - $ref: '#/components/parameters/administrative_area'
        - $ref: '#/components/parameters/postal_code'
      responses:
        200:
          description: OK(success!), The response body will be a JSON array containing zero or more matches for the input provided with the request. The structure of the response is the same for both GET and POST requests.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/200'
        401:
          description: "*Unauthorized*"
          content:
            text/plain:
              schema:
                example: The credentials were provided incorrectly or did not match any existing, active credentials.
                type: string
        402:
          description: "*Payment Required*"
          content:
            text/plain:
              schema:
                example: There is no active subscription for the account associated with the credentials submitted with the request.
                type: string
        403:
          description: "*Forbidden*"
          content:
            text/plain:
              schema:
                example: Because the international service is currently in a limited release phase, only approved accounts may access the service.
                type: string
        422:
          description: "*Unproccessable Entity:*"
          content:
            text/plain:
              schema:
                example: A GET request lacked required fields.
                type: string
        413:
          description: "*Request Entity Too Large*"
          content:
            text/plain:
              schema:
                example: The maximum size for a request body to this API is 16K (16,384 bytes).
                type: string
        400:
          description: "*Bad Request (Malformed Payload)*"
          content:
            text/plain:
              schema:
                example: The request body of a POST requeset contained no lookups or contained malformed JSON.
                type: string
        429:
          description: "*Too Many Requests*"
          content:
            text/plain:
              schema:
                example: When using public "website key" authentication, we restrict the number of requests coming from a given source over too short of a time. If you use "website key" authentication, you can avoid this error by adding your IP address as an authorized host for the website key in question.
                type: string
        504:
          description: "*Gateway Timeout:*"
          content:
            text/plain:
              schema:
                example: Our own upstream data provider did not respond in a timely fashion and the request failed. A serious, yet rare occurrence indeed.
                type: string
        
tags:
- name: street-address
  description: Search Street Addresses
  
externalDocs:
  description: "Extensive documentation for the US-ZIPCode-API"
  url: https://smartystreets.com/docs/cloud/us-zipcode-api
  
components:
  parameters:
    auth-id:
      name: auth-id
      in: query
      description: "**Auth ID** *Example: 123* Authentication information"
      schema:
        type: string
    auth-token:
      name: auth-token
      in: query
      description: "**Auth Token** *Example: abc* Authentication information"
      schema:
        type: string
    country:
      name: country
      in: query
      description: "**Country** *Example: Brazil* This must be entered with every address. Country Name or ISO classification (ISO-3, ISO-2 or ISO-N). Address validation will fail if this is missing."
      schema:
        type: string
    geocode:
      name: geocode
      in: query
      description: "**Geocode** Set to true to enable geocoding (disabled by default)."
      schema:
        type: boolean
    language:
      name: language
      in: query
      description: "**Language** *Example: native* When not set, the output language will match the language of the input values. When set to `native`, the results will always be in the language of the output country. When set to `latin`, the results will always be provided using a Latin character set."
      schema:
        type: string
    freeform:
      name: freeform
      in: query
      description: "**Freeform** *Example: Via Santa Maria di Costantinopoli, 72 46030-Tabellano MN*"
      schema:
        type: string
    address1:
      name: address1
      in: query
      description: "**Address1** *Example: Calle Proc. San Sebastiàn, 15* The first address line"
      schema:
        type: string
    address2:
      name: address1
      in: query
      description: "**Address2** The second address line"
      schema:
        type: string
    address3:
      name: address1
      in: query
      description: "**Address3** The third address line"
      schema:
        type: string
    address4:
      name: address1
      in: query
      description: "**Address4** The fourth address line"
      schema:
        type: string
    organization:
      name: organization
      in: query
      description: "**Organization** *Example: Robert Smith* The name of the recipient, firm, or company at this address."
      schema:
        type: string
    locality:
      name: locality
      in: query
      description: "**Locality** *Example: Paris* The city name."
      schema:
        type: string
    administrative_area:
      name: administrative_area
      in: query
      description: "**Administrative Area** *Example: Alberta or AB* The state or province name or abbreviation."
      schema:
        type: string
    postal_code:
      name: postal_code
      in: query
      description: "**Postal Code** *Example: 90210-2301* The postal code."
      schema:
        type: string
        
  schemas:
    200:
      title: Successful response
      type: object
      properties:
        input_id:
          type: string
          example: '8675309'
        organization:
          type: string
          example: 'Pelé'
        address1:
          type: string
          example: "Rua padre Antônio D'ângelo 121"
        address2:
          type: string
          example: 'Casa Verde'
        address3:
          type: string
          example: '02516-040 Sāo Paulo SP'
        address4:
          type: string
        address5:
          type: string
        address6:
          type: string
        address7:
          type: string 
        address8:
          type: string 
        address9:
          type: string
        address10:
          type: string 
        address11:
          type: string 
        address12:
          type: string
        components:
          type: array
          items:
            $ref: '#/components/schemas/Components'
        metadata:
          type: array
          items:
            $ref: '#/components/schemas/Metadata'
        analysis:
          type: array
          items:
            $ref: '#/components/schemas/Analysis'
    Components:
      title: Components
      type: object
      properties:
        country_iso_3:
          type: string
          example: 'BRA'
        administrative_area:
          type: string
          example: 'SP'
        super_administrative_area:
          type: string
        sub_administrative_area:
          type: string
        locality:
          type: string
          example: 'Sāo Paulo'
        dependent_locality:
          type: string
          example: 'Casa Verde'
        dependent_locality_name:
          type: string
        double_dependent_locality:
          type: string
        postal_code:
          type: string
          example: '02516-040'
        postal_code_short:
          type: string
          example: '02516-040'
        postal_code_extra:
          type: string
        premise:
          type: string
          example: '121'
        premise_extra:
          type: string
        premise_number:
          type: string
          example: '121'
        premise_type:
          type: string
        thoroughfare:
          type: string
          example: "Rua Padre Antônio D'ântonio"
        thoroughfare_predirection:
          type: string
        thoroughfare_postdirection:
          type: string
        thoroughfare_name:
          type: string
          example: "Rua Padre Antônio D'ântonio"
        thoroughfare_trailing_type:
          type: string
        thoroughfare_type:
          type: string
          example: 'Rua'
        dependent_thoroughfare:
          type: string
        dependent_thoroughfare_predirection:
          type: string
        dependent_thoroughfare_postdirection:
          type: string
        dependent_thoroughfare_name:
          type: string
        dependent_thoroughfare_trailing_type:
          type: string
        dependent_thoroughfare_type:
          type: string
        building:
          type: string
        building_leading_type:
          type: string
        building_name:
          type: string
        building_trailing_type:
          type: string
        sub_building:
          type: string
        sub_building_type:
          type: string
        sub_building_number:
          type: string
        sub_building_name:
          type: string
        post_box:
          type: string
        post_box_type:
          type: string
        post_box_number:
          type: string
    Metadata:
      title: Metadata
      type: object
      properties:
        latitude:
          type: number
          example: -23.50948
        longitude:
          type: number
          example: -46.66073
        geocode_precision:
          type: string
          example: 'Premise'
        max_geocode_precision:
          type: string
        address_format:
          type: string
    Analysis:
      title: Analysis
      type: object
      properties:
        verification_status:
          type: string
          example: 'Verified'
        address_precision:
          type: string
          example: 'Premise'
        max_address_precision:
          type: string
        changes:
          type: array
          items:
            $ref: '#/components/schemas/Changes'
    Changes:
      title: Changes
      type: object
      properties:
        organization:
          type: string
          example: 'Verified-NoChange'
        address1:
          type: string
          example: 'Verified-AliasChange'
        address2:
          type: string
          example: 'Verified-SmallChange'
        address3:
          type: string
          example: 'Verified-LargeChange'
        address4:
          type: string
          example: 'Added'
        address5:
          type: string
          example: 'Identified-NoChange'
        address6:
          type: string
          example: 'Identified-AliasChange'
        address7:
          type: string
          example: 'Identified-ContextChange'
        address8:
          type: string 
          example: 'Unrecognized'
        address9:
          type: string
        address10:
          type: string 
        address11:
          type: string 
        address12:
          type: string
        components:
          type: array
          items:
            $ref: '#/components/schemas/Components'