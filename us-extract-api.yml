openapi: 3.0.1
info:
  title: "US-Extract-API"
  description: |
    So you don't like playing 'Wheres Waldo' to find addresses in sentences, the SmartyStreets US-Extract RESTful API has your back. 
  termsOfService: "https://smartystreets.com/legal/terms-of-service"
  contact:
    name: "the Smarty Pit-Crew"
    email: "support@smartystreets.com"
  version: 3.1.11
  
servers:
- url: https://us-extract.api.smartystreets.com/
  
paths:
  /:
    post:
      summary: Find the address in your message
      description: Search for a larger volume of data (up to 100 inputs or 16K per request)
      requestBody:
        description: 'Data should be encoded as a `JSON` array where each element in the array is a `JSON object with field names identical to those in the provided examples.'
        content:
          application/json; charset=utf-8:
            schema:
              $ref: '#/components/schemas/LookupManyArray'
        required: true
      responses:
        200:
          description: successful operation
          content:
            application/json; charset=utf-8:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/200'
        401:
          description: Unauthorized
          content:
            text/plain:
              schema:
                example: The credentials were provided incorrectly or did not match any existing, active credentials.
                type: string
        402:
          description: Payment Required
          content:
            text/plain:
              schema:
                example: There is no active subscription for the account associated with the credentials submitted with the request.
                type: string
        400:
          description: Bad Request (Malformed Payload)
          content:
            text/plain:
              schema:
                example: The request body of a POST requeset contained no lookups or contained malformed JSON.
                type: string
        429:
          description: Too Many Requests
          content:
            text/plain:
              schema:
                example: When using public "website key" authentication, we restrict the number of requests coming from a given source over too short of a time. If you use "website key" authentication, you can avoid this error by adding your IP address as an authorized host for the website key in question.
                type: string
        413:
          description: Request Entity Too Large
          content:
            text/plain:
              schema:
                example: The maximum size for a request body to this API is 16K (16,384 bytes).
                type: string
                
security: 
- auth_id: []
  auth_token: []
- website_key: []
        
tags:
- name: us-extract
  description: Find an address in a sentence
  
externalDocs:
  description: "Extensive documentation for the US-ZIPCode-API"
  url: https://smartystreets.com/docs/cloud/us-zipcode-api
  
components:
  parameters:
    auth-id:
      name: auth-id
      in: query
      description: "**Auth ID** *Example: 123* Authentication information"
      schema:
        type: string
    auth-token:
      name: auth-token
      in: query
      description: "**Auth Token** *Example: abc* Authentication information"
      schema:
        type: string
    street:
      name: street
      in: query
      description: "**Street** *Example: 1600+amphitheatre+pkwy* The street line of the address, or the entire address('freeform' input)."
      schema:
        type: string
    street2:
      name: street2
      in: query
      description: "**Street2** *Example: Leave it on the front porch* Any extra address information."
      schema:
        type: string
    secondary:
      name: secondary
      in: query
      description: "**Secondary** *Example: Apt 52* Apartment, suite, or office number."
      schema:
        type: string
    city:
      name: city
      in: query
      description: "**City** *Example: Provo* The city name."
      schema:
        type: string
    state:
      name: state
      in: query
      description: "**State** *Example: UT* State name or two-letter abbreviation."
      schema:
        type: string
    zipcode:
      name: zipcode
      in: query
      description: "**Zip code** *Example: 84604* The ZIP Code."
      schema:
        type: string
    lastline:
      name: lastline
      in: query
      description: "**Last Line** *Example: Provo, UT 84604* City, state, and ZIP Code combined."
      schema:
        type: string
    addressee:
      name: addressee
      in: query
      description: "**Addressee** *Example: John Doe* The name of the recipient, firm, or company at this address."
      schema:
        type: string
    urbanization:
      name: urbanization
      in: query
      description: "**Urbanization** Only used with Puerto Rico."
      schema:
        type: string
    candidates:
      name: candidates
      in: query
      description: "**Candidates** *Example: 1* The maximum number of valid addresses returned when the input is ambiguous (Max Value: 10)."
      schema:
        type: string
    match:
      name: match
      in: query
      description: "**Match Type** *Example: invalid* The match output strategy to be employted for this lookup. Valid values are: **strict**: The API will ONLY return candidates that are valid USPS addresses. **range**: The API will return candidates that are valid USPS addresses, as well as invalid addresses with primary numbers that fall within a valid range for the street. **invalid**: The API will return a single candidate for every properly submitted address, even if invalid or ambiguous."
      schema:
        type: string
    input_id:
      name: input_id
      in: query
      example: 867-5309
      description: "**Input ID** *Example: 867-5309* A unique identifier for this address used in your application; this field will be copied to the output"
      schema:
        type: string
        
  schemas:
    200:
      title: Successful response
      type: object
      properties:
        meta:
          type: object
          properties:
            lines:
              type: integer
              example: 6
            unicode:
              type: boolean
              example: false
            address_count:
              type: integer
              example: 1
            verified_count:
              type: integer
              example: 1
            bytes:
              type: integer
              example: 53
            character_count:
              type: integer
              example: 53
        addresses:
          type: array
          items:
            $ref: '#/components/schemas/Addresses'
    Addresses:
      title: Addresses
      type: object
      properties:
        text:
          type: string
          example: '5732 Lincoln Drive Minneapolis MN'
        verified:
          type: boolean
          example: true
        line:
          type: integer
          description: 'The starting line of the text in the input'
          example: 4
        start:
          type: integer
          description: 'The starting index of the text'
          example: 16
        end:
          type: integer
          description: 'The ending character index of the text'
          example: 49
        api_output:
          type: array
          items:
            $ref: '#/components/schemas/APIOutput'
    APIOutput:
      title: APIOutput
      type: object
      properties:
        candidate_index:
          type: integer
          example: 0
        delivery_line_1:
          type: string
          example: '5732 Lincoln Dr'
        last_line:
          type: string
          example: 'Minneapolis MN 55436-1608'
        delivery_point_barcode:
          type: string
          example: '554361608327'
        components:
          items:
            $ref: '#/components/schemas/Components'
        metadata:
          items:
            $ref: '#/components/schemas/Metadata'
        analysis:
          items:
            $ref: '#/components/schemas/Analysis'
    Components:
      title: Components
      type: object
      properties:
        urbanization:
          type: string
        primary_number:
          type: string
          example: '5732'
        street_name:
          type: string
          example: 'Lincoln'
        street_predirection:
          type: string
        street_postdirection:
          type: string
        street_suffix:
          type: string
          example: 'Dr'
        secondary_number:
          type: string
          example: '200'
        secondary_desigantor:
          type: string
        extra_secondary_number:
          type: string
        extra_secondary_designator:
          type: string
        pmb_designator:
          type: string
        pmb_number:
          type: string
        city_name:
          type: string
          example: 'Minneapolis'
        default_city_name:
          type: string
        state_abbreviation:
          type: string
          example: 'MN'
        zipcode:
          type: string
          example: '55436'
        plus4_code:
          type: string
          example: '1608'
        delivery_point:
          type: string
          example: '32'
        delivery_point_check_digit:
          type: string
          example: '7'
    Metadata:
      title: Metadata
      type: object
      properties:
        record_type:
          type: string
          example: 'S'
        zip_type:
          type: string
          example: 'Standard'
        county_fips:
          type: string
          example: '27053'
        county_name:
          type: string
          example: 'Hennepin'
        ews_match:
          type: string
        carrier_route:
          type: string
          example: 'C009'
        congressional_district:
          type: string
          example: '03'
        building_default_indicator:
          type: string
        rdi:
          type: string
          example: 'Commercial'
        elot_sequence:
          type: string
          example: '0035'
        elot_sort:
          type: string
          example: 'A'
        latitude:
          type: number
          example: 44.90127
        longitude:
          type: number
          example: -93.50045
        precision:
          type: string
          example: 'Zip9'
        time_zone:
          type: string
          example: 'Central'
        utc_offset:
          type: integer
          example: -6
        dst:
          type: boolean
          example: true
    Analysis:
      title: Analysis
      type: object
      properties:
        dpv_match_code:
          type: string
          example: 'Y'
        dpv_footnotes:
          type: string
          example: 'AABB'
        dpv_cmra:
          type: string
          example: 'N'
        dpv_vacant:
          type: string
          example: 'N'
        active:
          type: string
          example: 'Y'
        footnotes:
          type: string
          example: 'N#'
        lacslink_code:
          type: string
        lacslink_indicator:
          type: string
        suitelink_match:
          type: boolean
    LookupManyArray:
      type: string
      example:
        - 'Meet me at 5732 Lincoln Drive Minneapolis MN'
  securitySchemes:
    auth_id:
      type: apiKey
      name: auth-id
      in: query
    auth_token:
      type: apiKey
      name: auth-token
      in: query
    website_key:
      type: apiKey
      name: key
      in: query
      